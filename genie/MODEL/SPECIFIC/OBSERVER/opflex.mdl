module[observer]
{
    # Universe containing system statistics
    class[SysStatUniverse;
          super=observer/Universe;
          concrete;
          ]
    {
        named
        {
            parent[class=*;]
            {
                component[prefix=sysStat;]
            }
        }
    }

    # OpFlex protocol related counters in opflex-agent
    class[OpflexAgentCounter;
          super=observer/Observable;
          concrete;
          ]
    {
        contained
        {
            parent[class=observer/SysStatUniverse]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=opflex;
                          member=peer]
            }
        }

        member[peer; type=ascii/String]

        # the number of identity requests sent
        member[identReqs; type=scalar/UInt64]

        # the number of identity responses received
        member[identResps; type=scalar/UInt64]

        # the number of identity error responses
        member[identErrs; type=scalar/UInt64]

        # number of policy resolves sent
        member[polResolves; type=scalar/UInt64]

        # number of policy resolve responses received
        member[polResolveResps; type=scalar/UInt64]

        # number of policy resolve error responses
        member[polResolveErrs; type=scalar/UInt64]

        # number of policy unresolves sent
        member[polUnresolves; type=scalar/UInt64]

        # number of policy unresolve responses received
        member[polUnresolveResps; type=scalar/UInt64]

        # number of policy unresolve error responses
        member[polUnresolveErrs; type=scalar/UInt64]

        # number of policy updates received
        member[polUpdates; type=scalar/UInt64]

        # number of endpoint declares sent
        member[epDeclares; type=scalar/UInt64]

        # number of endpoint declares responses received
        member[epDeclareResps; type=scalar/UInt64]

        # number of endpoint declares error responses
        member[epDeclareErrs; type=scalar/UInt64]

        # number of endpoint declares sent
        member[epUndeclares; type=scalar/UInt64]

        # number of endpoint declares responses received
        member[epUndeclareResps; type=scalar/UInt64]

        # number of endpoint declares error responses
        member[epUndeclareErrs; type=scalar/UInt64]

        # the number of state reports sent
        member[stateReports; type=scalar/UInt64]

        # the number of state reports responses received
        member[stateReportResps; type=scalar/UInt64]

        # the number of state reports error repsonses
        member[stateReportErrs; type=scalar/UInt64]
 
        # the number of unresolved policies 
        member[polUnresolvedCount; type=scalar/UInt64]
    }

    # OpFlex protocol related counters in opflex-server
    class[OpflexServerCounter;
          super=observer/Observable;
          concrete;
          ]
    {
        contained
        {
            parent[class=observer/SysStatUniverse]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=opflex;
                          member=peer]
            }
        }

        member[peer; type=ascii/String]

        # the number of identity requests received
        member[identReqs; type=scalar/UInt64]

        # number of policy updates received from gbp server
        # and sent to a connection
        member[polUpdates; type=scalar/UInt64]

        # number of policy resolves received
        member[polResolves; type=scalar/UInt64]
        # number of policies unavailable on received resolves
        member[polUnavailableResolves; type=scalar/UInt64]
        # number of policy resolves received errors
        member[polResolveErrs; type=scalar/UInt64]

        # number of policy unresolves received
        member[polUnresolves; type=scalar/UInt64]
        # number of policy unresolves received errors
        member[polUnresolveErrs; type=scalar/UInt64]

        # number of endpoint declares received
        member[epDeclares; type=scalar/UInt64]
        # number of endpoint declares received errors
        member[epDeclareErrs; type=scalar/UInt64]

        # number of endpoint declares received
        member[epUndeclares; type=scalar/UInt64]
        # number of endpoint declares received errors
        member[epUndeclareErrs; type=scalar/UInt64]

        # number of endpoint resolves received
        member[epResolves; type=scalar/UInt64]
        # number of endpoint resolves received errors
        member[epResolveErrs; type=scalar/UInt64]

        # number of endpoint resolves received
        member[epUnresolves; type=scalar/UInt64]
        # number of endpoint resolves received errors
        member[epUnresolveErrs; type=scalar/UInt64]

        # the number of state reports received
        member[stateReports; type=scalar/UInt64]
        # the number of state reports received errors
        member[stateReportErrs; type=scalar/UInt64]
    }
}
